name: main

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test (${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - python-version: '3.8'
          #- python-version: '3.9'
          #- python-version: '3.10'
          #- python-version: '3.11'
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: python -m pip install --upgrade poetry
    - name: Run Tests
      run: |
        poetry install
        poetry run pytest
    - name: upload-artifact
      if: ${{ github.event_name == 'push' }}
      uses: actions/upload-artifact@v3
      with:
        name: coverage-${{ github.sha }}
        path: coverage.xml
    - name: checkout-base-ref-source-code
      if: ${{ github.event_name == 'pull_request' }}
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.base.sha }}
        path: base_ref
    - name: checkout-base-ref-coverage
      if: ${{ github.event_name == 'pull_request' }}
      run: |
          set -x
          ARCHIVE_DOWNLOAD_URL=$(curl \
            -f \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            ${{ github.api_url }}/repos/${{ github.repository }}/actions/artifacts\?name\=coverage-${{ github.event.pull_request.base.sha }} | jq -r '.artifacts[0].archive_download_url')
          echo "${ARCHIVE_DOWNLOAD_URL}"
          # Follow the location and redirect
          curl -L \
            -f \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "${ARCHIVE_DOWNLOAD_URL}" \
            --output coverage-base-ref.zip && \
          unzip coverage-base-ref.zip -d base_ref && \
          rm coverage-base-ref.zip
    - name: pycobertura
      if: ${{ github.event_name == 'pull_request' }}
      run: |
        pip install git+https://github.com/goatwu1993/pycobertura.git@feat/diff-github-annotation-format
        pycobertura diff \
          --source1 base_ref/ \
          --source2 . \
          base_ref/coverage.xml \
          coverage.xml \
          --format=github-annotation